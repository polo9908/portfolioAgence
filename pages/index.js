import { GET_ALL_POSTS } from '@/graphql/queries';
import { ApolloClient, InMemoryCache } from '@apollo/client'
import Head from 'next/head'
import Link from 'next/link';
import Styles from "./../styles/Home.module.css"
import Header from '@/components/Header/Header';
import Footer from '@/components/Footer/Footer';

export default function Home({ posts }) {
  const headerBackgroundColor = "white";
  const linkColor = "#8CAC31";
  const iconAirbus = "#8CAC31"
  // Séparer les posts en deux tableaux pour CardLeft et CardRight
  const leftPosts = posts.filter((_, index) => index % 2 === 0);
  const rightPosts = posts.filter((_, index) => index % 2 !== 0);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header backgroundColor={headerBackgroundColor} linkColor={linkColor} iconAirbus={iconAirbus}/>
      <div className={Styles.Home}>
        <h1>
          Sites Web Sur-Mesure
          <br />
          Spécialisation en UX/UI
        </h1>
      </div>
      <div className={Styles.TitleRealisations}>
        <h2>Réalisations</h2>
      </div>
      <div className={Styles.Sections} id="realisations">
        <div className={Styles.CardLeft}>
          {leftPosts.map((val, i) => {
            const STRAPI_BASE_URL = "http://localhost:1337"; // Remplacez par l'URL de votre serveur Strapi
            let imageUrl = STRAPI_BASE_URL + val.attributes.illustration.data.attributes.url
            return (

            <div key={i} className={Styles.Card}>
              <Link className={Styles.Link} href={`/${val.attributes.slug}`}>
                <div className={Styles.informations_haut}>
                  <p>{val.attributes.competences}</p>
                  <h3>{val.attributes.entreprise}</h3>
                </div>
                <div className={Styles.ContainerImage}>
                  <img className={Styles.Image} src={imageUrl} alt={val.attributes.entreprise} />
                </div>
                <div className={Styles.informations_bas }>
                  <p>{val.attributes.date}</p>
                  <p>{val.attributes.technologies}</p>
                </div>
              </Link>
            </div>
            )
          }
          )}
        </div>
        <div className={Styles.CardRight}>
          {rightPosts.map((val, i) => {
            const STRAPI_BASE_URL = "http://localhost:1337"; // Remplacez par l'URL de votre serveur Strapi

            let imageUrl = STRAPI_BASE_URL + val.attributes.illustration.data.attributes.url
            return (
            <div key={i} className={Styles.Card}>
              <Link className={Styles.Link} href={`/${val.attributes.slug}`}>
                <div className={Styles.informations_haut}>
                  <p>{val.attributes.competences}</p>
                  <h3>{val.attributes.entreprise}</h3>
                </div>
                <div className={Styles.ContainerImage}>
                  <img className={Styles.Image} src={imageUrl} alt={val.attributes.entreprise} />
                </div>
                <div className={Styles.informations_bas }>
                  <p>{val.attributes.date}</p>
                  <p>{val.attributes.technologies}</p>
                </div>
              </Link>
            </div>
            )
          }
          )}
        </div>
      </div>
      <Footer/>
    </>
  );
}


export async function getStaticProps(){
  const client = new ApolloClient({
    uri: "http://localhost:1337/graphql",
    cache: new InMemoryCache()
  });

  const {data} = await client.query({
    query: GET_ALL_POSTS
  })
  
  return {
    props: {
      posts: data.realisations.data
    }
  }
}
